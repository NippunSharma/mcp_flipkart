[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "flipkart-mcp-server"
version = "0.1.0"
description = "MCP server for Flipkart e-commerce API"
authors = [
    {name = "Flipkart MCP Team", email = "support@example.com"},
]
dependencies = [
    "mcp[cli]>=1.0.0",
    "httpx>=0.25.0",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
keywords = ["mcp", "flipkart", "e-commerce", "api", "shopping"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

[project.urls]
Homepage = "https://github.com/your-org/flipkart-mcp-server"
Documentation = "https://github.com/your-org/flipkart-mcp-server/blob/main/docs/README.md"
Repository = "https://github.com/your-org/flipkart-mcp-server"
Issues = "https://github.com/your-org/flipkart-mcp-server/issues"

[project.scripts]
flipkart-mcp-server = "flipkart_mcp.server:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "pyright>=1.1.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/flipkart_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "tests/",
    "examples/",
    "docs/",
    "*.md",
    "*.toml",
    "*.txt",
]

[tool.ruff]
line-length = 88
target-version = "py310"
src = ["src", "tests", "examples"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "RUF012", # mutable class attributes should be annotated with `typing.ClassVar`
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]  # allow assert statements in tests
"examples/**/*" = ["T201"]  # allow print statements in examples

[tool.ruff.lint.isort]
known-first-party = ["flipkart_mcp"]

[tool.pyright]
include = ["src", "tests", "examples"]
exclude = ["**/__pycache__", "build", "dist"]
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false
reportOptionalMemberAccess = false
reportOptionalCall = false
reportOptionalIterable = false
reportOptionalContextManager = false
reportOptionalOperand = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportWildcardImportFromLibrary = true
reportPrivateUsage = true
reportUnnecessaryTypeIgnoreComment = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "pyright>=1.1.0",
    "pre-commit>=3.0.0",
    "pytest-cov>=4.0.0",
] 
